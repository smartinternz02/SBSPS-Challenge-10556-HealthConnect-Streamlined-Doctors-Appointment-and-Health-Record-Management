/*
 * HealthConnect+ HealthConnect+
 *
 * The version of the OpenAPI document: 1.0.0 Contact: abc@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech Do not edit the class manually.
 */


package org.openapitools.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import javax.validation.constraints.*;

/**
 * ProbeResponse
 */
@JsonPropertyOrder({ProbeResponse.JSON_PROPERTY_OK})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaJerseyServerCodegen",
    date = "2023-08-25T10:57:20.735818+05:30[Asia/Kolkata]")
public class ProbeResponse {
  public static final String JSON_PROPERTY_OK = "ok";
  @JsonProperty(JSON_PROPERTY_OK)
  private Boolean ok;

  public ProbeResponse ok(Boolean ok) {
    this.ok = ok;
    return this;
  }

  /**
   * Get ok
   * 
   * @return ok
   **/
  @JsonProperty(value = "ok")
  @ApiModelProperty(required = true, value = "")
  @NotNull
  public Boolean getOk() {
    return ok;
  }

  public void setOk(Boolean ok) {
    this.ok = ok;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProbeResponse probeResponse = (ProbeResponse) o;
    return Objects.equals(this.ok, probeResponse.ok);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ok);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProbeResponse {\n");

    sb.append("    ok: ").append(toIndentedString(ok)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

