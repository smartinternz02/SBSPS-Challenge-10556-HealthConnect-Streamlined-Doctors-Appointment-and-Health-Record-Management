/*
 * HealthConnect+ HealthConnect+
 *
 * The version of the OpenAPI document: 1.0.0 Contact: abc@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech Do not edit the class manually.
 */


package org.openapitools.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModelProperty;
import java.util.Date;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import javax.validation.constraints.*;
import org.bson.Document;

/**
 * Report
 */
@JsonPropertyOrder({Report.JSON_PROPERTY_DATE, Report.JSON_PROPERTY_DOCTOR_EMAIL,
    Report.JSON_PROPERTY_URL, Report.JSON_PROPERTY_USER_EMAIL})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaJerseyServerCodegen",
    date = "2023-08-25T10:57:20.735818+05:30[Asia/Kolkata]")
public class Report {
  public static final String JSON_PROPERTY_REPORT_ID = "report_id";
  @JsonProperty(JSON_PROPERTY_REPORT_ID)
  private String reportID;

  public static final String JSON_PROPERTY_DATE = "date";
  @JsonProperty(JSON_PROPERTY_DATE)
  private String date;

  public static final String JSON_PROPERTY_DOCTOR_EMAIL = "doctor_email";
  @JsonProperty(JSON_PROPERTY_DOCTOR_EMAIL)
  private String doctorEmail;

  public static final String JSON_PROPERTY_URL = "url";
  @JsonProperty(JSON_PROPERTY_URL)
  private String url;

  public static final String JSON_PROPERTY_USER_EMAIL = "user_email";
  @JsonProperty(JSON_PROPERTY_USER_EMAIL)
  private String userEmail;

  public Report date(String date) {
    this.date = date;
    return this;
  }

  /**
   * Get date
   * 
   * @return date
   **/
  @JsonProperty(value = "date")
  @ApiModelProperty(required = true, value = "")
  @NotNull
  public String getDate() {
    return date;
  }

  public void setDate(String date) {
    this.date = date;
  }

  public Report doctorEmail(String doctorEmail) {
    this.doctorEmail = doctorEmail;
    return this;
  }

  /**
   * Get doctorEmail
   * 
   * @return doctorEmail
   **/
  @JsonProperty(value = "doctor_email")
  @ApiModelProperty(required = true, value = "")
  @NotNull
  public String getDoctorEmail() {
    return doctorEmail;
  }

  public void setDoctorEmail(String doctorEmail) {
    this.doctorEmail = doctorEmail;
  }

  public Report url(String url) {
    this.url = url;
    return this;
  }

  /**
   * Get reportID
   * 
   * @return reportID
   **/
  @JsonProperty(value = "report_id")
  @ApiModelProperty(required = true, value = "")
  @NotNull
  public String getReportID() {
    return reportID;
  }

  public void setReportID(String reportID) {
    this.reportID = reportID;
  }

  public Report reportID(String reportID) {
    this.reportID = reportID;
    return this;
  }

  /**
   * Get url
   * 
   * @return url
   **/
  @JsonProperty(value = "url")
  @ApiModelProperty(required = true, value = "")
  @NotNull
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }

  public Report userEmail(String userEmail) {
    this.userEmail = userEmail;
    return this;
  }

  /**
   * Get userEmail
   * 
   * @return userEmail
   **/
  @JsonProperty(value = "user_email")
  @ApiModelProperty(required = true, value = "")
  @NotNull
  public String getUserEmail() {
    return userEmail;
  }

  public void setUserEmail(String userEmail) {
    this.userEmail = userEmail;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Report report = (Report) o;
    return Objects.equals(this.date, report.date)
        && Objects.equals(this.doctorEmail, report.doctorEmail)
        && Objects.equals(this.url, report.url) && Objects.equals(this.userEmail, report.userEmail);
  }

  @Override
  public int hashCode() {
    return Objects.hash(date, doctorEmail, url, userEmail);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Report {\n");
    sb.append("    report_id: ").append(toIndentedString(reportID)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    doctor_email: ").append(toIndentedString(doctorEmail)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    user_email: ").append(toIndentedString(userEmail)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  public boolean isValid() {
    if (this.userEmail == null || this.doctorEmail == null || this.url == null
        || this.reportID == null || this.date == null) {
      return false;
    }
    return true;
  }

  public Document toDocument() {
    return new Document(JSON_PROPERTY_DATE, this.getDate().toString())
        .append(JSON_PROPERTY_DOCTOR_EMAIL, this.getDoctorEmail().toString())
        .append(JSON_PROPERTY_REPORT_ID, this.getReportID().toString())
        .append(JSON_PROPERTY_URL, this.getUrl().toString())
        .append(JSON_PROPERTY_USER_EMAIL, this.getUserEmail().toString());
  }
}

