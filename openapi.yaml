---
components:
  schemas:
    Doctor:
      properties:
        contactnumber:
          example: '12345'
          maxLength: 10
          minLength: 10
          type: string
        email:
          example: john@email.com
          type: string
        gender:
          enum:
            - male
            - female
            - other
          type: string
        password:
          example: '12345'
          type: string
        speciality:
          enum:
            - neurologist
            - cardiologist
            - gynacologist
            - surgeon
            - physician
            - psychiatrist
            - urologist
            - nephrologist
            - pediatrician
            - dermatologist
            - anasthesiologist
            - oncologist
            - gastroenterlogist
            - endocrinologist
            - optomologist
            - orthologist
            - ENT Specialist
            - orthopaedist
            - pulmonologist
            - podiatrists
          type: string
      required:
        - email
        - speciality
        - password
        - gender
      type: object
    ErrorObject:
      properties:
        code:
          type: integer
        description:
          type: string
        more_info:
          type: string
      type: object
    Medicine:
      properties:
        composition:
          type: string
        expirydate:
          format: date
          type: string
        id:
          example: 10
          format: int64
          type: integer
        manufacturedate:
          format: date
          type: string
        name:
          example: paracetamol
          type: string
        price:
          type: string
      required:
        - medicine name
        - medicine id
      type: object
    ProbeResponse:
      properties:
        ok:
          type: boolean
    Rating:
      properties:
        doctoremail:
          type: string
        stars:
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
          type: integer
        useremail:
          type: string
      required:
        - useremail
        - doctoremail
        - stars
      type: object
    Report:
      properties:
        date:
          format: date
          type: string
        doctor_email:
          type: string
        url:
          type: string
        user_email:
          type: string
      required:
        - user_email
        - doctor_email
        - url
        - date
    User:
      properties:
        address:
          type: string
        email:
          example: john@email.com
          type: string
        gender:
          enum:
            - male
            - female
            - other
          type: string
        password:
          example: '12345'
          type: string
        phone:
          example: '12345'
          maxLength: 10
          minLength: 10
          type: string
        username:
          type: string
      required:
        - email
        - phone
        - password
        - username
      type: object
info:
  contact:
    email: abc@gmail.com
    name: DevDynamos
    url: https://github.com/smartinternz02/SBSPS-Challenge-10556-HealthConnect-Streamlined-Doctors-Appointment-and-Health-Record-Management
  title: HealthConnect+
  version: 1.0.0
openapi: 3.0.3
paths:
  /doctors:
    delete:
      operationId: deleteDoctor
      parameters:
        - in: query
          name: email
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 204 No Content
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
          description: 404 Not Found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
          description: 500 Internal Server Error
      tags:
        - doctors
    get:
      operationId: getDoctor
      parameters:
        - in: query
          name: email
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Doctor'
          description: 200 OK
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
          description: 401 Unauthorized
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
          description: 404 Not Found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
          description: 500 Internal Server Error
      tags:
        - doctors
    post:
      operationId: createDoctor
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Doctor'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Doctor'
          description: 201 Created
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
          description: 400 Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
          description: 401 Unauthorized
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
          description: 500 Internal Server Error
      tags:
        - doctors
    put:
      operationId: updateDoctor
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Doctor'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Doctor'
          description: 200 OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
          description: 400 Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
          description: 401 Unauthorized
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
          description: 404 Not Found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
          description: 500 Internal Server Error
      tags:
        - doctors
  /healthreports:
    delete:
      operationId: deleteReport
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: 204 No Content
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
          description: 401 Unauthorized
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
          description: 404 Not Found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
          description: 500 Internal Server Error
      tags:
        - reports
    get:
      operationId: getReport
      parameters:
        - in: query
          name: email
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
          description: 200 OK
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
          description: 401 Unauthorized
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
          description: 404 Not Found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
          description: 500 Internal Server Error
      tags:
        - reports
    post:
      operationId: createReport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Report'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
          description: 201 Created
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
          description: 400 Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
          description: 401 Unauthorized
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
          description: 404 Not Found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
          description: 500 Internal Server Error
      tags:
        - reports
    put:
      operationId: updateReport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Report'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
          description: 200 OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
          description: 400 Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
          description: 401 Unauthorized
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
          description: 404 Not Found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
          description: 500 Internal Server Error
      tags:
        - reports
  /healthy:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProbeResponse'
          description: 200 OK
  /medicines:
    delete:
      operationId: deleteMedicine
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: 204 No Content
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
          description: 401 Unauthorized
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
          description: 404 Not Found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
          description: 500 Internal Server Error
      tags:
        - medicines
    get:
      operationId: getMedicine
      parameters:
        - in: query
          name: email
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Medicine'
          description: 200 OK
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
          description: 401 Unauthorized
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
          description: 404 Not Found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
          description: 500 Internal Server Error
      tags:
        - medicines
    post:
      operationId: createMedicine
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Medicine'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Medicine'
          description: 200 OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
          description: 400 Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
          description: 401 Unauthorized
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
          description: 404 Not Found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
          description: 500 Internal Server Error
      tags:
        - medicines
    put:
      operationId: updateMedicine
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Medicine'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Medicine'
          description: 200 OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
          description: 400 Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
          description: 401 Unauthorized
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
          description: 404 Not Found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
          description: 500 Internal Server Error
      tags:
        - medicines
  /ready:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProbeResponse'
          description: 200 OK
  /reviews:
    delete:
      operationId: deleteReview
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: 204 No Content
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
          description: 401 Unauthorized
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
          description: 404 Not Found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
          description: 500 Internal Server Error
      tags:
        - reviews
    get:
      operationId: getReview
      parameters:
        - in: query
          name: email
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rating'
          description: 200 OK
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
          description: 401 Unauthorized
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
          description: 404 Not Found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
          description: 500 Internal Server Error
      tags:
        - reviews
    post:
      operationId: createReview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rating'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rating'
          description: 201 Created
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
          description: 400 Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
          description: 401 Unauthorized
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
          description: 404 Not Found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
          description: 500 Internal Server Error
      tags:
        - reviews
    put:
      operationId: updateReview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rating'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rating'
          description: 200 OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
          description: 400 Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
          description: 401 Unauthorized
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
          description: 404 Not Found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
          description: 500 Internal Server Error
      tags:
        - reviews
  /users:
    delete:
      operationId: deleteUser
      parameters:
        - in: query
          name: email
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 204 No Content
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
          description: 401 Unauthorized
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
          description: 404 Not Found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
          description: 500 Internal Server Error
      tags:
        - users
    get:
      operationId: getUser
      parameters:
        - in: query
          name: email
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: 200 OK
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
          description: 401 Unauthorized
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
          description: 404 Not Found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
          description: 500 Internal Server Error
      tags:
        - users
    post:
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: 200 OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
          description: 400 400 Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
          description: 401 Unauthorized
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
          description: 500 Internal Server Error
      tags:
        - users
    put:
      operationId: updateUser
      parameters:
        - in: query
          name: email
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: 200 OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
          description: 400 Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
          description: 401 Unauthorized
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
          description: 404 Not Found
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
          description: 500 Internal Server Error
      tags:
        - users
  /users/createWithList:
    post:
      operationId: createUsers
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/User'
              type: array
      responses:
        '201':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
          description: 201 Created
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
          description: 400 Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
          description: 401 Unauthorized
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
          description: 500 Internal Server Error
      tags:
        - users
servers:
  - url: ''
          
       
