openapi: 3.0.3
info:
  title: HealthConnect+
  contact:
    name: DevDynamos
    url: https://github.com/smartinternz02/SBSPS-Challenge-10556-HealthConnect-Streamlined-Doctors-Appointment-and-Health-Record-Management
    email: abc@gmail.com
  version: 1.0.0
  license:
    name: unlicensed
  description: HealthConnect+
  termsOfService: none

servers:
  - url: 'http://localhost:9999/health-connect-plus'
paths:

  /orders:
    post:
      tags:
        - Orders APIs
      operationId: createOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderDetails'
      responses:
        '200':
          description: 200 OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDetails'
        '400':
          description: 400 Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '401':
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '500':
          description: 500 Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
    get:
      tags:
        - Orders APIs
      operationId: getOrder
      parameters:
        - name: email
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderDetails'
        '400':
          description: 400 Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '401':
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '404':
          description: 404 Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '500':
          description: 500 Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
    put:
      tags:
        - Orders APIs
      operationId: updateOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderDetails'
      responses:
        '200':
          description: 200 OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDetails'
        '400':
          description: 400 Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '401':
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '500':
          description: 500 Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
    delete:
      tags:
        - Orders APIs
      operationId: deleteOrder
      parameters:
        - name: order_id
          in: query
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 204 No Content
        '401':
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '404':
          description: 404 Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '500':
          description: 500 Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
      

  /auth/login:
    post:
      tags:
        - Auth APIs
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginCreds'
      responses:
        '200':
          description: 200 OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggedInUserDetails'
        '400':
          description: 400 Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '401':
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '500':
          description: 500 Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'

  /appointments:
    post:
      tags:
        - Appointments APIs
      operationId: bookAppointment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppointmentDetails'
      responses:
        '200':
          description: 200 OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentDetails'
        '400':
          description: 400 Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '401':
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '500':
          description: 500 Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
    get:
      tags:
        - Appointments APIs
      operationId: getAppointment
      parameters:
        - name: email
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AppointmentDetails'
        '400':
          description: 400 Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '401':
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '404':
          description: 404 Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '500':
          description: 500 Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
    put:
      tags:
        - Appointments APIs
      operationId: updateAppointment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppointmentDetails'
      responses:
        '200':
          description: 200 OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentDetails'
        '400':
          description: 400 Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '401':
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '500':
          description: 500 Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
    delete:
      tags:
        - Appointments APIs
      operationId: deleteAppointment
      parameters:
        - name: ref_id
          in: query
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 204 No Content
        '401':
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '404':
          description: 404 Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '500':
          description: 500 Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'

  /doctors:
    get:
      tags:
        - Doctors APIs
      operationId: getDoctor
      parameters:
        - name: email
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Doctor'
        '401':
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '404':
          description: 404 Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '500':
          description: 500 Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
    put:
      security:
        - bearerAuth: []
      tags:
        - Doctors APIs
      operationId: updateDoctor
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Doctor'
      responses:
        '200':
          description: 200 OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Doctor'
        '400':
          description: 400 Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '401':
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '404':
          description: 404 Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '500':
          description: 500 Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
    post:
      security:
        - bearerAuth: []
      tags:
        - Doctors APIs
      operationId: createDoctor
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Doctor'
      responses:
        '201':
          description: 201 Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Doctor'
        '400':
          description: 400 Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '401':
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '500':
          description: 500 Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
    delete:
      security:
        - bearerAuth: []
      tags:
        - Doctors APIs
      operationId: deleteDoctor
      parameters:
        - name: email
          in: query
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 204 No Content
        '404':
          description: 404 Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '500':
          description: 500 Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
  /health-reports:
    get:
      security:
        - bearerAuth: []
      tags:
        - HealthReports APIs
      operationId: getReport
      parameters:
        - name: email
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Report'
        '401':
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '404':
          description: 404 Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '500':
          description: 500 Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
    put:
      security:
        - bearerAuth: []
      tags:
        - HealthReports APIs
      operationId: updateReport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Report'
      responses:
        '200':
          description: 200 OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
        '400':
          description: 400 Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '401':
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '404':
          description: 404 Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '500':
          description: 500 Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
    post:
      security:
        - bearerAuth: []
      tags:
        - HealthReports APIs
      operationId: createReport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Report'
      responses:
        '201':
          description: 201 Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
        '400':
          description: 400 Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '401':
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '404':
          description: 404 Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '500':
          description: 500 Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
    delete:
      security:
        - bearerAuth: []
      tags:
        - HealthReports APIs
      operationId: deleteReport
      parameters:
        - name: report_id
          in: query
          required: true
          
          schema:
            type: integer
      responses:
        '204':
          description: 204 No Content
        '401':
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '404':
          description: 404 Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '500':
          description: 500 Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
  /healthy:
    get:
      responses:
        '200':
          description: 200 OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProbeResponse'
  /medicines:
    get:
      tags:
        - Medicines APIs
      operationId: getMedicine
      parameters:
        - name: medicine_id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Medicine'
        '401':
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '404':
          description: 404 Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '500':
          description: 500 Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
    put:
      security:
        - bearerAuth: []
      tags:
        - Medicines APIs
      operationId: updateMedicine
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Medicine'
      responses:
        '200':
          description: 200 OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Medicine'
        '400':
          description: 400 Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '401':
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '404':
          description: 404 Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '500':
          description: 500 Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
    post:
      security:
        - bearerAuth: []
      tags:
        - Medicines APIs
      operationId: createMedicine
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Medicine'
      responses:
        '200':
          description: 200 OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Medicine'
        '400':
          description: 400 Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '401':
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '404':
          description: 404 Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '500':
          description: 500 Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
    delete:
      security:
        - bearerAuth: []
      tags:
        - Medicines APIs
      operationId: deleteMedicine
      parameters:
        - name: id
          in: query
          required: true
          
          schema:
            type: integer
      responses:
        '204':
          description: 204 No Content
        '401':
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '404':
          description: 404 Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '500':
          description: 500 Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
  /ready:
    get:
      responses:
        '200':
          description: 200 OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProbeResponse'
  /reviews:
    get:
      tags:
        - Ratings APIs
      operationId: getReview
      parameters:
        - name: review_id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Rating'
        '401':
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '404':
          description: 404 Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '500':
          description: 500 Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
    put:
      security:
        - bearerAuth: []
      tags:
        - Ratings APIs
      operationId: updateReview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rating'
      responses:
        '200':
          description: 200 OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rating'
        '400':
          description: 400 Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '401':
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '404':
          description: 404 Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '500':
          description: 500 Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
    post:
      tags:
        - Ratings APIs
      operationId: createReview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rating'
      responses:
        '201':
          description: 201 Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rating'
        '400':
          description: 400 Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '401':
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '404':
          description: 404 Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '500':
          description: 500 Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
    delete:
      security:
        - bearerAuth: []
      tags:
        - Ratings APIs
      operationId: deleteReview
      parameters:
        - name: review_id
          in: query
          required: true

          schema:
            type: integer
      responses:
        '204':
          description: 204 No Content
        '401':
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '404':
          description: 404 Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '500':
          description: 500 Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
  /users:
    get:
      security:
        - bearerAuth: []
      tags:
        - Users APIs
      operationId: getUser
      parameters:
        - name: email
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '401':
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '404':
          description: 404 Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '500':
          description: 500 Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
    put:
      security:
        - bearerAuth: []
      tags:
        - Users APIs
      operationId: updateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: 200 OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: 400 Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '401':
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '404':
          description: 404 Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '500':
          description: 500 Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
    post:
      security:
        - bearerAuth: []
      tags:
        - Users APIs
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: 200 OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: 400 400 Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '401':
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '500':
          description: 500 Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
    delete:
      security:
        - bearerAuth: []
      tags:
        - Users APIs
      operationId: deleteUser
      parameters:
        - name: email
          in: query
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 204 No Content
        '401':
          description: 401 Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '404':
          description: 404 Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        '500':
          description: 500 Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Doctor:
      required:
        - email
        - password
        - speciality
        - consultation_fees
        - contact_number
      type: object
      properties:
        experience:
          type: integer
          example: 9
        consultation_fees:
          type: integer
          example: 234
        contact_number:
          maxLength: 10
          minLength: 10
          type: string
          example: '9192947354'
        email:
          type: string
          example: john@email.com
        gender:
          type: string
          enum:
            - male
            - female
            - other
        password:
          type: string
          example: '12345'
        speciality:
          type: string
          enum:
            - Neurologist
            - Cardiologist
            - Gynacologist
            - Surgeon
            - Physician
            - Psychiatrist
            - Urologist
            - Nephrologist
            - Pediatrician
            - Dermatologist
            - Anasthesiologist
            - Oncologist
            - Gastroenterlogist
            - Endocrinologist
            - Optomologist
            - Orthologist
            - ENT Specialist
            - Orthopaedist
            - Pulmonologist
            - Podiatrists
    ErrorObject:
      type: object
      required:
        - code
        - description
        - more_info
      properties:
        code:
          type: integer
        description:
          type: string
        more_info:
          type: string
    Medicine:
      required:
        - medicine_id
        - name
        - manufacturer
        - price
      type: object
      properties:
        composition:
          type: string
        expiry_date:
          type: string
          format: date
        medicine_id:
          type: string
          example: "1abei2b"
        manufacturer:
          type: string
        name:
          type: string
          example: paracetamol
        price:
          type: integer
    ProbeResponse:
      required:
        - ok
      properties:
        ok:
          type: boolean
    Rating:
      required:
        - doctor_email
        - rate
        - user_email
        - rating_id
      type: object
      properties:
        rating_id:
          type: string
        doctor_email:
          type: string
        rate:
          type: integer
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
        user_email:
          type: string
    Report:
      required:
        - date
        - doctor_email
        - url
        - user_email
        - report_id
      properties:
        report_id:
          type: string
        date:
          type: string
          format: date
        doctor_email:
          type: string
        url:
          type: string
        user_email:
          type: string
    User:
      required:
        - email
        - password
        - phone
        - name
      type: object
      properties:
        address:
          type: string
        email:
          type: string
          example: john@email.com
        gender:
          type: string
          enum:
            - male
            - female
            - other
        password:
          type: string
          example: '12345'
        phone:
          maxLength: 10
          minLength: 10
          type: string
          example: '12345'
        name:
          type: string
    LoginCreds:
      required:
        - type
        - email
        - password
      type: object
      properties:
        type:
          type: string
          enum:
            - doctor
            - user
        email:
          type: string
        password:
          type: string
    LoggedInUserDetails:
      required:
        - email
        - name
        - type
        - auth_token
      type: object
      properties:
        email:
          type: string
        name:
          type: string
        type:
          type: string
          enum:
            - doctor
            - user
        auth_token:
          type: string
    AppointmentDetails:
      required:
        - appointment_id
        - doctor_email
        - user_email
        - date
        - time
      properties:
        appointment_id:
          type: string
        doctor_email:
          type: string
        user_email:
          type: string
        date:
          type: string
        time:
          type: string
    OrderDetails:
      required:
        - order_id
        - user_email
        - items
        - type
        - date
        - price
      properties:
        order_id:
          type: string
        user_email:
          type: string
        items:
          type: array
          items:
            type: string
        type:
          type: string
          enum:
            - Appointment
            - Medicine
        date:
          type: string
        price:
          type: string